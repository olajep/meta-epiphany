From a08419e165a8198ca6141581e1a0c71ca9338a3f Mon Sep 17 00:00:00 2001
From: Ola Jeppsson <ola.jeppsson@gmail.com>
Date: Sun, 26 Dec 2021 21:37:38 +0100
Subject: [PATCH 34/34] epiphany: Fix compile errors

gcc/
	* config/epiphany/epiphany.md (define_expand "casesi"): Remove
	unneeded operand to emit_cmp_and_jump_insns().
	(define_insn "casesi_load"): Fix cast of operand to rtx_insn.
	* config/epiphany/epiphany.c: Include "cfgrtl.h".
	(epiphany_expand_prologue): Remove VOIDmode argument to
	gen_rtx_SET.

Signed-off-by: Ola Jeppsson <ola.jeppsson@gmail.com>
---
 gcc/ChangeLog.epiphany          | 9 +++++++++
 gcc/config/epiphany/epiphany.c  | 5 +++--
 gcc/config/epiphany/epiphany.md | 4 ++--
 3 files changed, 14 insertions(+), 4 deletions(-)

diff --git a/gcc/ChangeLog.epiphany b/gcc/ChangeLog.epiphany
index 0841c2a034a..d72c8915807 100644
--- a/gcc/ChangeLog.epiphany
+++ b/gcc/ChangeLog.epiphany
@@ -1,3 +1,12 @@
+2021-12-26  Ola Jeppsson  <ola.jeppsson@gmail.com>
+
+	* config/epiphany/epiphany.md (define_expand "casesi"): Remove
+	unneeded operand to emit_cmp_and_jump_insns().
+	(define_insn "casesi_load"): Fix cast of operand to rtx_insn.
+	* config/epiphany/epiphany.c: Include "cfgrtl.h".
+	(epiphany_expand_prologue): Remove VOIDmode argument to
+	gen_rtx_SET.
+
 2019-03-24  Ola Jeppsson  <ola@adapteva.com>
 
 	* config/epiphany/epiphany.opt (fsoftware-cache): Add missing
diff --git a/gcc/config/epiphany/epiphany.c b/gcc/config/epiphany/epiphany.c
index b6d1f6e6356..fa40961bec7 100644
--- a/gcc/config/epiphany/epiphany.c
+++ b/gcc/config/epiphany/epiphany.c
@@ -45,6 +45,7 @@ along with GCC; see the file COPYING3.  If not see
 #include "explow.h"
 #include "expr.h"
 #include "tm-constrs.h"
+#include "cfgrtl.h"
 #include "tree-pass.h"	/* for current_pass */
 #include "context.h"
 #include "pass_manager.h"
@@ -1945,7 +1946,7 @@ epiphany_expand_prologue (void)
 			     GEN_INT (frame_adjust));
       else
 	insn
-	  = gen_rtx_SET (VOIDmode, hard_frame_pointer_rtx, stack_pointer_rtx);
+	  = gen_rtx_SET (hard_frame_pointer_rtx, stack_pointer_rtx);
       (frame_pointer_needed ? frame_insn : emit_insn) (insn);
 	
     }
@@ -1991,7 +1992,7 @@ epiphany_expand_prologue (void)
 	  reg = gen_rtx_REG (Pmode, GPR_IP);
 	  frame_move_insn (reg, off);
 	  note = gen_rtx_PLUS (Pmode, stack_pointer_rtx, off);
-	  note = gen_rtx_SET (VOIDmode, stack_pointer_rtx, note);
+	  note = gen_rtx_SET (stack_pointer_rtx, note);
 	  off = reg;
 	}
       insn = frame_insn (gen_stack_adjust_add (off, mem));
diff --git a/gcc/config/epiphany/epiphany.md b/gcc/config/epiphany/epiphany.md
index 488065cc7dd..8e92f50d242 100644
--- a/gcc/config/epiphany/epiphany.md
+++ b/gcc/config/epiphany/epiphany.md
@@ -2279,7 +2279,7 @@
       operands[0] = reg;
     }
   emit_cmp_and_jump_insns (operands[0], operands[2], GTU, NULL_RTX, Pmode, 1,
-			   operands[4], -1);
+			   operands[4]);
   rtx target = gen_reg_rtx (Pmode);
   emit_insn (gen_casesi_load (target, operands[0], operands[3]));
   emit_jump_insn (gen_tablejump_internal (target, operands[3]));
@@ -2295,7 +2295,7 @@
    (clobber (reg:CC CC_REGNUM))]
   "flag_pic"
 {
-  rtx diff_vec = PATTERN (next_nonnote_insn (operands[2]));
+  rtx diff_vec = PATTERN (next_nonnote_insn (as_a<rtx_insn *> (operands[2])));
   gcc_assert (GET_CODE (diff_vec) == ADDR_DIFF_VEC);
   enum machine_mode mode = GET_MODE (diff_vec);
   int shift = exact_log2 (GET_MODE_SIZE (mode));
-- 
2.31.1

