From ecebcf99336b168600f627edf97b4c11672af263 Mon Sep 17 00:00:00 2001
From: Joern Rennecke <joern.rennecke@embecosm.com>
Date: Thu, 3 Apr 2014 23:56:54 +0100
Subject: [PATCH 20/33] gcc:         * config/epiphany/epiphany.c
 (epiphany_expand_epilogue): Don't move         stack adjustment offset into a
 register unless we have to. gcc/testsuite:         *
 gcc.target/epiphany/pop-1.c: New test.

---
 gcc/ChangeLog.epiphany                    |  8 ++++++++
 gcc/config/epiphany/epiphany.c            | 14 +++++++++++---
 gcc/testsuite/gcc.target/epiphany/pop-1.c | 10 ++++++++++
 3 files changed, 29 insertions(+), 3 deletions(-)
 create mode 100644 gcc/testsuite/gcc.target/epiphany/pop-1.c

diff --git a/gcc/ChangeLog.epiphany b/gcc/ChangeLog.epiphany
index 89a6eb29e90..db91e0a3d2e 100644
--- a/gcc/ChangeLog.epiphany
+++ b/gcc/ChangeLog.epiphany
@@ -36,6 +36,14 @@
 
 	* config/epiphany/epiphany.md (GPR_FP): Change to 11.
 
++2014-04-03  Joern Rennecke  <joern.rennecke@embecosm.com>
+
+gcc:
+	* config/epiphany/epiphany.c (epiphany_expand_epilogue): Don't move
+	stack adjustment offset into a register unless we have to.
+gcc/testsuite:
+	* gcc.target/epiphany/pop-1.c: New test.
+
 2013-09-03  Simon Cook  <simon.cook@embecosm.com>
 
 	* config/epiphany/epiphany.h (EPIPHANY_LIBRARY_EXTRA_SPEC): Don't
diff --git a/gcc/config/epiphany/epiphany.c b/gcc/config/epiphany/epiphany.c
index 85409a9acb9..73e2a4ae8c6 100644
--- a/gcc/config/epiphany/epiphany.c
+++ b/gcc/config/epiphany/epiphany.c
@@ -2030,9 +2030,17 @@ epiphany_expand_epilogue (int sibcall_p)
   else if (current_frame_info.last_slot_offset)
     {
       mem = gen_frame_mem (BLKmode, stack_pointer_rtx);
-      reg = gen_rtx_REG (Pmode, GPR_IP);
-      emit_move_insn (reg, GEN_INT (current_frame_info.last_slot_offset));
-      emit_insn (gen_stack_adjust_add (reg, mem));
+      /* We also get in this code path if there is a small, non-zero frame,
+	 but no register to restore.  Don't move the offset to a register
+	 unless we have to.  */
+      off = GEN_INT (current_frame_info.last_slot_offset);
+      if (!SIMM11 (INTVAL (off)))
+	{
+	  reg = gen_rtx_REG (Pmode, GPR_IP);
+	  emit_move_insn (reg, off);
+	  off = reg;
+	}
+      emit_insn (gen_stack_adjust_add (off, mem));
     }
   restore_offset = (interrupt_p
 		    ? - 3 * UNITS_PER_WORD
diff --git a/gcc/testsuite/gcc.target/epiphany/pop-1.c b/gcc/testsuite/gcc.target/epiphany/pop-1.c
new file mode 100644
index 00000000000..d82dbed62c9
--- /dev/null
+++ b/gcc/testsuite/gcc.target/epiphany/pop-1.c
@@ -0,0 +1,10 @@
+/* { dg-do compile } */
+/* { dg-options "-O2" } */
+/* { dg-final { scan-assembler-times "add\[ \t]*sp,sp,#" 2 } } */
+/* { dg-final { scan-assembler-not "add\[ \t]*sp,sp,ip" } } */
+
+int f (int i)
+{
+  volatile j = i;
+  return j;
+}
-- 
2.31.1

